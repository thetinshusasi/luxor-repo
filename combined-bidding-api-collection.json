{
  "info": {
    "name": "Complete Bidding API Collection",
    "description": "Comprehensive API flow for the Bidding System - Combined Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://127.0.0.1:3001/api",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "collection_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "bid_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"admin@gmail.com\",\n    \"password\": \"12345\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/auth/login",
          "host": ["{{base_url}}"],
          "path": ["auth", "login"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('access_token', response.token);",
              "    pm.collectionVariables.set('user_id', response.userId || response.sub);",
              "    console.log('Token saved:', response.token);",
              "    console.log('User ID saved:', response.userId || response.sub);",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "2. Get All Users",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/users?page=1&limit=10",
          "host": ["{{base_url}}"],
          "path": ["users"],
          "query": [
            {
              "key": "page",
              "value": "1"
            },
            {
              "key": "limit",
              "value": "10"
            }
          ]
        }
      }
    },
    {
      "name": "2.1. Create New User (Admin only)",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"newuser@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"customer\",\n    \"isActive\": true,\n    \"isAdmin\": false,\n    \"isDeleted\": false\n}"
        },
        "url": {
          "raw": "{{base_url}}/users",
          "host": ["{{base_url}}"],
          "path": ["users"]
        }
      }
    },
    {
      "name": "3. Get User Collections",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/collections/userCollections",
          "host": ["{{base_url}}"],
          "path": ["collections", "userCollections"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const collections = pm.response.json();",
              "    if (collections && collections.length > 0) {",
              "        pm.collectionVariables.set('collection_id', collections[0].id);",
              "        console.log('Collection ID saved:', collections[0].id);",
              "    }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "4. Get All Bids by Collection ID",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/collections/{{collection_id}}/bids",
          "host": ["{{base_url}}"],
          "path": ["collections", "{{collection_id}}", "bids"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 200) {",
              "    const bids = pm.response.json();",
              "    if (bids && bids.length > 0) {",
              "        pm.collectionVariables.set('bid_id', bids[0].id);",
              "        console.log('Bid ID saved:', bids[0].id);",
              "    }",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "5. Create New Collection",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Vintage Art Collection\",\n    \"description\": \"A curated collection of vintage art pieces from the 20th century\",\n    \"stock\": 50,\n    \"price\": 999.99\n}"
        },
        "url": {
          "raw": "{{base_url}}/collections",
          "host": ["{{base_url}}"],
          "path": ["collections"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('collection_id', response.id);",
              "    console.log('Collection ID saved:', response.id);",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "6. Update Collection",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"name\": \"Updated Vintage Art Collection\",\n    \"description\": \"An updated description for the vintage art collection\",\n    \"price\": 1299.99,\n    \"stock\": 45\n}"
        },
        "url": {
          "raw": "{{base_url}}/collections/{{collection_id}}",
          "host": ["{{base_url}}"],
          "path": ["collections", "{{collection_id}}"]
        }
      }
    },
    {
      "name": "7. Create New Bid",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"collectionId\": \"{{collection_id}}\",\n    \"price\": 1200.00\n}"
        },
        "url": {
          "raw": "{{base_url}}/bids",
          "host": ["{{base_url}}"],
          "path": ["bids"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "if (pm.response.code === 201) {",
              "    const response = pm.response.json();",
              "    pm.collectionVariables.set('bid_id', response.id);",
              "    console.log('Bid ID saved:', response.id);",
              "}"
            ]
          }
        }
      ]
    },
    {
      "name": "8. Update Bid",
      "request": {
        "method": "PATCH",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"price\": 1350.00\n}"
        },
        "url": {
          "raw": "{{base_url}}/bids/{{bid_id}}",
          "host": ["{{base_url}}"],
          "path": ["bids", "{{bid_id}}"]
        }
      }
    },
    {
      "name": "9. Delete Bid",
      "request": {
        "method": "DELETE",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/bids/{{bid_id}}",
          "host": ["{{base_url}}"],
          "path": ["bids", "{{bid_id}}"]
        }
      }
    },
    {
      "name": "10. Accept Bid",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"collectionId\": \"{{collection_id}}\",\n    \"bidId\": \"{{bid_id}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/collections/accept-bid",
          "host": ["{{base_url}}"],
          "path": ["collections", "accept-bid"]
        }
      }
    },
    {
      "name": "Additional Endpoints",
      "item": [
        {
          "name": "Get Collection by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/collections/{{collection_id}}",
              "host": ["{{base_url}}"],
              "path": ["collections", "{{collection_id}}"]
            }
          }
        },
        {
          "name": "Get All Collections with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/collections?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["collections"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Collections by User ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/collections/user/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["collections", "user", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Get All Bids with Pagination",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bids?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["bids"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Bid by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/bids/{{bid_id}}",
              "host": ["{{base_url}}"],
              "path": ["bids", "{{bid_id}}"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/profile",
              "host": ["{{base_url}}"],
              "path": ["users", "profile"]
            }
          }
        },
        {
          "name": "Get User by ID (Admin only)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Delete Collection",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/collections/{{collection_id}}",
              "host": ["{{base_url}}"],
              "path": ["collections", "{{collection_id}}"]
            }
          }
        },
        {
          "name": "Update User (Admin only)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated User\",\n    \"email\": \"updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Delete User (Admin only)",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        }
      ]
    }
  ]
}
